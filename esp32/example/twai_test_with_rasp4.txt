#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "driver/twai.h"
#include "esp_log.h"

#define TAG "TWAI_REAL"
#define TX_GPIO_NUM 5
#define RX_GPIO_NUM 4

void app_main(void)
{
    // TWAI 구성 (Normal mode)
    twai_general_config_t g_config = TWAI_GENERAL_CONFIG_DEFAULT(TX_GPIO_NUM, RX_GPIO_NUM, TWAI_MODE_NORMAL);
    twai_timing_config_t t_config = TWAI_TIMING_CONFIG_500KBITS();
    twai_filter_config_t f_config = TWAI_FILTER_CONFIG_ACCEPT_ALL(); // 모든 ID 수신 허용

    ESP_ERROR_CHECK(twai_driver_install(&g_config, &t_config, &f_config));
    ESP_LOGI(TAG, "Driver installed");

    ESP_ERROR_CHECK(twai_start());
    ESP_LOGI(TAG, "TWAI started");

    // 송신 메시지 구성
    twai_message_t tx_msg = {
        .identifier = 0x123,
        .extd = 0,
        .rtr = 0,
        .data_length_code = 1,
        .data = {42},  // 임의의 데이터
    };

    // 메시지 송신
    ESP_LOGI(TAG, "Sending message...");
    ESP_ERROR_CHECK(twai_transmit(&tx_msg, pdMS_TO_TICKS(1000)));
    ESP_LOGI(TAG, "Message sent");

    // 메시지 수신 (다른 노드에서 전송한 걸 기다림)
    twai_message_t rx_msg;
    ESP_LOGI(TAG, "Waiting for message...");
    if (twai_receive(&rx_msg, pdMS_TO_TICKS(5000)) == ESP_OK) {
        ESP_LOGI(TAG, "Received message: ID=0x%lx, data=%d", rx_msg.identifier, rx_msg.data[0]);
    } else {
        ESP_LOGW(TAG, "No message received");
    }

    // 종료
    ESP_ERROR_CHECK(twai_stop());
    ESP_ERROR_CHECK(twai_driver_uninstall());
    ESP_LOGI(TAG, "TWAI stopped and driver uninstalled");
}
